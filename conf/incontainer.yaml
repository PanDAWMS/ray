payload:
  plugin: pilot2http:Pilot2HttpPayload
  bindir: /opt/miniconda/bin # used if ray runs in container, overrided by dockerfile envvar
  virtualenv: pilot2 # oused if ray runs in container, overrided by dockerfile envvar
  condabindir: /opt/miniconda/bin # used if ray runs in container, overrided by dockerfile envvar
  pandaqueue: NERSC_Cori_p2_ES
  logfilename: log.pilotwrapper
  extrasetup: export PYTHONPATH=/opt/yampl/python-lib:$PYTHONPATH LD_LIBRARY_PATH=/opt/yampl/lib:$LD_LIBRARY_PATH;
  extrapostpayload:
  hpcresource: cori
  containerengine:
  containerextraargs:

harvester:
  endpoint: $SCRATCH/raythena/harvester
  communicator: harvesterMock:HarvesterMock
  harvesterconf: $SCRATCH/raythena/harvester/panda_harvester.cfg
  min_nevents: 170000

ray:
  headip:
  redisport:
  redispassword:
  driver: esdriver:ESDriver
  workdir: $SCRATCH/raythena/workdir

resources:
  corepernode: 32
  workerpernode: 1

logging:
  level: info
  logfile: raythena.log
